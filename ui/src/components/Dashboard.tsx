import React, { useId } from "react";

type Trend = "up" | "down" | "flat";

type Severity = "info" | "warning" | "critical";

type ComponentRow = {
  label: string;
  value: string;
  intent?: Trend | "info";
};

type TimelineEvent = {
  time: string;
  label: string;
  severity?: Severity;
};

type ComponentBar = {
  label: string;
  value: number;
  baseline?: number;
  display?: string;
};

type DashboardComponent = {
  id: string;
  title: string;
  metric?: string;
  change?: string;
  trend?: Trend;
  description?: string;
  badges?: string[];
  insights?: string[];
  sparkline?: number[];
  bars?: ComponentBar[];
  rows?: ComponentRow[];
  timeline?: TimelineEvent[];
};

type DashboardSection = {
  id: string;
  title: string;
  description: string;
  components: DashboardComponent[];
};

const dashboardSections: DashboardSection[] = [
  {
    id: "overview",
    title: "üìà Overview",
    description:
      "Holistic picture of the Phoenix portfolio with the most recent risk and return signals.",
    components: [
      {
        id: "equity_curve",
        title: "Equity Curve",
        metric: "$12.8M",
        change: "+3.6% MTD",
        trend: "up",
        description: "Trailing 90 day strategy NAV. New local high set 2 days ago.",
        sparkline: [82, 78, 85, 88, 91, 97, 104, 109, 107, 113, 118],
        insights: ["Volatility cluster easing", "Confidence band tightened to 4.2%"],
      },
      {
        id: "daily_pnl",
        title: "Daily P&L",
        metric: "+$182k",
        change: "+0.9% vs. 30d avg",
        trend: "up",
        description: "Net of transaction costs across all sleeves.",
        bars: [
          { label: "Mon", value: 120, display: "$120k" },
          { label: "Tue", value: 76, display: "$76k" },
          { label: "Wed", value: 240, display: "$240k" },
          { label: "Thu", value: 182, display: "$182k" },
          { label: "Fri", value: 95, display: "$95k" },
        ],
        insights: ["Hit ratio 60%", "Max single-day loss -$55k"],
      },
      {
        id: "sharpe_metrics",
        title: "Sharpe Metrics",
        metric: "1.94",
        change: "+0.08 w/w",
        trend: "up",
        description: "Realized Sharpe statistics across multiple horizons.",
        rows: [
          { label: "30 day", value: "1.94", intent: "up" },
          { label: "90 day", value: "1.72", intent: "up" },
          { label: "Live run", value: "1.63", intent: "flat" },
        ],
        badges: ["target ‚â• 1.5"],
      },
      {
        id: "exposure_map",
        title: "Exposure Map",
        metric: "Gross 143%",
        change: "Net +18%",
        trend: "flat",
        description: "Top sleeves and their directional footprint.",
        rows: [
          { label: "US Equities", value: "+42%", intent: "up" },
          { label: "Rates", value: "-24%", intent: "down" },
          { label: "Commodities", value: "+9%", intent: "up" },
          { label: "Crypto", value: "+3%", intent: "flat" },
        ],
        insights: ["Leverage buffer 0.7x", "FX overlay hedged"],
      },
      {
        id: "alerts_summary",
        title: "Alerts Summary",
        description: "Latest supervision alerts generated by the monitoring stack.",
        timeline: [
          { time: "09:42", label: "Latency spike resolved", severity: "info" },
          { time: "08:17", label: "Risk limit breach auto-trimmed", severity: "warning" },
          { time: "06:03", label: "Challenger drift outside band", severity: "critical" },
        ],
        insights: ["0 open Sev-1 tickets", "Ops SLA green"],
      },
    ],
  },
  {
    id: "model_analysis",
    title: "üß† Model Insights",
    description:
      "Understand model quality, drivers, and stability of the Phoenix stack across live windows.",
    components: [
      {
        id: "hit_rate",
        title: "Hit Rate",
        metric: "62%",
        change: "+4.1% vs prev week",
        trend: "up",
        sparkline: [58, 55, 59, 61, 64, 62],
        insights: ["Long bias sleeves outperform", "Options alpha lagging"],
      },
      {
        id: "shap_top_features",
        title: "SHAP ‚Äî Top Features",
        description: "Relative contribution of top predictive signals.",
        bars: [
          { label: "Volatility regime", value: 36, display: "36%" },
          { label: "Liquidity spread", value: 24, display: "24%" },
          { label: "Funding curve", value: 18, display: "18%" },
          { label: "Macro surprise", value: 12, display: "12%" },
          { label: "Social sentiment", value: 10, display: "10%" },
        ],
        badges: ["Coverage 94%"],
      },
      {
        id: "feature_drift_chart",
        title: "Feature Drift",
        metric: "1.12 PSI",
        change: "-0.05 d/d",
        trend: "down",
        sparkline: [1.35, 1.33, 1.28, 1.24, 1.19, 1.12],
        insights: ["Stabilised after retrain", "Keep monitoring ESG feed"],
      },
      {
        id: "target_distribution",
        title: "Target Distribution",
        description: "Balance of long/short labels during latest training window.",
        rows: [
          { label: "Long", value: "48%", intent: "up" },
          { label: "Short", value: "45%", intent: "down" },
          { label: "Neutral", value: "7%", intent: "flat" },
        ],
        badges: ["Drift < 5%"],
      },
      {
        id: "challenger_vs_champion",
        title: "Challenger vs Champion",
        metric: "+42 bps",
        change: "Challenger lead",
        trend: "up",
        description: "Net alpha differential over past 21 live days.",
        rows: [
          { label: "Champion", value: "Sharpe 1.63", intent: "info" },
          { label: "Challenger A", value: "Sharpe 1.71", intent: "up" },
          { label: "Challenger B", value: "Sharpe 1.49", intent: "down" },
        ],
      },
    ],
  },
  {
    id: "backtest_review",
    title: "üß™ Backtest / Live Run Analysis",
    description:
      "Drill into realised trades and backtest fidelity to validate the research to production loop.",
    components: [
      {
        id: "trade_list_table",
        title: "Latest Trades",
        description: "Sample of executed orders with attribution.",
        rows: [
          { label: "NVDA", value: "+$42k ‚Äî mean reversion", intent: "up" },
          { label: "ZB futures", value: "-$18k ‚Äî macro hedge", intent: "down" },
          { label: "ETH perp", value: "+$9k ‚Äî momentum", intent: "up" },
        ],
        badges: ["slippage 3.2 bps"],
      },
      {
        id: "price_chart_with_signals",
        title: "Price with Signals",
        metric: "Signal Conviction 0.78",
        sparkline: [94, 97, 101, 99, 104, 108, 111, 109],
        insights: ["7/10 trades aligned", "No stop-outs triggered"],
      },
      {
        id: "holding_period_dist",
        title: "Holding Period Distribution",
        description: "Average duration of live positions vs design target.",
        bars: [
          { label: "< 1d", value: 12, display: "12%" },
          { label: "1-3d", value: 38, display: "38%" },
          { label: "3-5d", value: 29, display: "29%" },
          { label: "> 5d", value: 21, display: "21%" },
        ],
        badges: ["Target 2.5d"],
      },
      {
        id: "performance_metrics_table",
        title: "Performance Metrics",
        rows: [
          { label: "IR", value: "2.03", intent: "up" },
          { label: "Max DD", value: "-6.4%", intent: "down" },
          { label: "Calmar", value: "3.4", intent: "up" },
        ],
        insights: ["Backtest-live divergence 1.3%"],
      },
      {
        id: "monte_carlo_scenarios",
        title: "Monte Carlo Stress",
        metric: "95% CVaR -8.9%",
        change: "-0.7% tighter",
        trend: "up",
        description: "1k path stress with volatility regime sampling.",
        insights: ["Left tail trimmed", "Capital buffer adequate"],
      },
    ],
  },
  {
    id: "risk_monitor",
    title: "‚ö†Ô∏è Risk Monitor",
    description:
      "Continuous supervision of leverage, drawdown, and asset specific exposure health.",
    components: [
      {
        id: "live_drawdown",
        title: "Live Drawdown",
        metric: "-4.2%",
        change: "Peak -6.4%",
        trend: "up",
        sparkline: [-6.4, -5.9, -5.3, -4.8, -4.2],
        insights: ["Recovery 2.2% since Monday"],
      },
      {
        id: "leverage_gauge",
        title: "Leverage",
        metric: "1.3x",
        change: "Cap 2.0x",
        trend: "flat",
        description: "Effective gross leverage after hedges.",
        bars: [
          { label: "Used", value: 65, baseline: 100, display: "65%" },
          { label: "Buffer", value: 35, baseline: 100, display: "35%" },
        ],
        badges: ["Alert @ 1.7x"],
      },
      {
        id: "exposure_by_asset",
        title: "Exposure by Asset",
        rows: [
          { label: "Tech MegaCap", value: "+19%", intent: "up" },
          { label: "Rates", value: "-12%", intent: "down" },
          { label: "Energy", value: "+7%", intent: "up" },
          { label: "EM FX", value: "-3%", intent: "flat" },
        ],
        insights: ["Sector limit 25%", "Commodity VaR stable"],
      },
      {
        id: "risk_alerts_log",
        title: "Risk Alerts Log",
        timeline: [
          { time: "10:21", label: "Equity beta drift resolved", severity: "info" },
          { time: "09:05", label: "Rates DV01 at 82% limit", severity: "warning" },
          { time: "07:48", label: "Commod sleeve stop raised", severity: "info" },
        ],
        badges: ["Auto-mitigated"],
      },
      {
        id: "stop_trigger_events",
        title: "Stop Trigger Events",
        description: "Hard stop activations over the last quarter.",
        rows: [
          { label: "January", value: "1", intent: "down" },
          { label: "February", value: "0", intent: "flat" },
          { label: "March", value: "1", intent: "info" },
        ],
        insights: ["No cascading stops"],
      },
    ],
  },
  {
    id: "data_validation",
    title: "üìä Data & Label QA",
    description:
      "Verify upstream data quality, anomalies, and label integrity that feed Phoenix research.",
    components: [
      {
        id: "anomaly_timeline",
        title: "Anomaly Timeline",
        timeline: [
          { time: "Fri", label: "FX liquidity drop", severity: "warning" },
          { time: "Thu", label: "Missing macro release", severity: "critical" },
          { time: "Tue", label: "Equity feed jitter", severity: "info" },
        ],
        insights: ["All patched", "Escalation SLA 45m"],
      },
      {
        id: "missing_data_table",
        title: "Missing Data",
        rows: [
          { label: "Economic releases", value: "0.6%", intent: "down" },
          { label: "Order book", value: "0.2%", intent: "flat" },
          { label: "Alt data", value: "1.1%", intent: "down" },
        ],
        badges: ["Threshold 2%"],
      },
      {
        id: "triple_barrier_distribution",
        title: "Triple Barrier Outcomes",
        description: "Outcome counts for recent labeling job.",
        rows: [
          { label: "Take profit", value: "57%", intent: "up" },
          { label: "Stop loss", value: "28%", intent: "down" },
          { label: "Timeout", value: "15%", intent: "flat" },
        ],
      },
      {
        id: "feature_coverage_map",
        title: "Feature Coverage",
        bars: [
          { label: "Market data", value: 96, display: "96%" },
          { label: "Alt data", value: 88, display: "88%" },
          { label: "Research", value: 91, display: "91%" },
        ],
        insights: ["Coverage uplift +3% w/w"],
      },
    ],
  },
  {
    id: "config_ops",
    title: "‚öôÔ∏è Config & Ops",
    description:
      "Operational levers for adjusting configurations, reviewing logs, and managing artifacts.",
    components: [
      {
        id: "current_config_viewer",
        title: "Current Config",
        metric: "phoenix-live-24.3",
        description: "Deployment hash 7f9c1a, refreshed 6 hours ago.",
        insights: ["Overrides: none", "Schedule: hourly"],
      },
      {
        id: "config_selector_launcher",
        title: "Config Selector",
        description: "Preview alternative research configs before promotion.",
        timeline: [
          { time: "Next", label: "phoenix-research-24.4", severity: "info" },
          { time: "Queued", label: "mean-reversion-lab", severity: "info" },
        ],
        badges: ["A/B ready"],
      },
      {
        id: "artifacts_browser",
        title: "Artifacts Browser",
        insights: [
          "Last run: backtest_2024-03-08",
          "Artifacts: feature-importances.csv, metrics.json",
          "Retention: 30 days",
        ],
      },
      {
        id: "logs_panel",
        title: "Logs",
        timeline: [
          { time: "10:14", label: "Pipeline heartbeat ok", severity: "info" },
          { time: "09:55", label: "Scheduler resync", severity: "warning" },
          { time: "09:20", label: "GPU pod spun up", severity: "info" },
        ],
      },
      {
        id: "run_status_indicator",
        title: "Run Status",
        metric: "Live",
        change: "Next check 12:00",
        trend: "up",
        rows: [
          { label: "Backtest", value: "Queued", intent: "info" },
          { label: "Paper", value: "Running", intent: "up" },
          { label: "Prod", value: "Green", intent: "up" },
        ],
        badges: ["SLO 99.9%"],
      },
    ],
  },
  {
    id: "agent_interface",
    title: "ü§ñ Phoenix Agent",
    description:
      "Interact with the Phoenix research co-pilot, review its learning traces, and monitor drift.",
    components: [
      {
        id: "prompt_input_box",
        title: "Prompt Inbox",
        description: "Latest operator prompts awaiting acknowledgement.",
        timeline: [
          { time: "Now", label: "Tune leverage heuristics", severity: "info" },
          { time: "08:12", label: "Summarise overnight delta", severity: "info" },
        ],
      },
      {
        id: "response_output_box",
        title: "Agent Responses",
        insights: [
          "Suggested volatility dampening tweak (accepted)",
          "Flagged alt data drift, opened ticket",
        ],
      },
      {
        id: "learning_log_viewer",
        title: "Learning Log",
        timeline: [
          { time: "09:40", label: "Reward +0.18 ‚Äî risk alignment", severity: "info" },
          { time: "09:02", label: "Reward -0.05 ‚Äî execution delay", severity: "warning" },
        ],
      },
      {
        id: "drift_graphs",
        title: "Prompt Drift",
        sparkline: [0.24, 0.28, 0.31, 0.29, 0.27, 0.26],
        metric: "0.26",
        change: "Cosine distance",
        trend: "down",
      },
      {
        id: "shap_dynamics_chart",
        title: "SHAP Dynamics",
        sparkline: [14, 16, 18, 17, 19, 22, 21],
        metric: "Top drifted: Liquidity spread",
        change: "+2.1 w/w",
        trend: "up",
      },
      {
        id: "agent_timeline",
        title: "Agent Timeline",
        timeline: [
          { time: "09:30", label: "Challenger review completed", severity: "info" },
          { time: "07:50", label: "Plan actioned: adjust hedges", severity: "warning" },
          { time: "06:45", label: "Research summary dispatched", severity: "info" },
        ],
      },
    ],
  },
];

const trendClasses: Record<Trend, string> = {
  up: "text-emerald-400",
  down: "text-rose-400",
  flat: "text-sky-400",
};

const severityClasses: Record<Severity, string> = {
  info: "bg-sky-500/10 text-sky-300",
  warning: "bg-amber-500/10 text-amber-300",
  critical: "bg-rose-500/10 text-rose-300",
};

const rowIntentClass = (intent?: ComponentRow["intent"]) => {
  if (!intent) return "text-slate-200";
  if (intent === "info") return "text-slate-300";
  return trendClasses[intent];
};

const Sparkline: React.FC<{ values: number[]; trend?: Trend }> = ({ values, trend = "flat" }) => {
  if (!values || values.length === 0) return null;

  const min = Math.min(...values);
  const max = Math.max(...values);
  const gradientId = useId();
  const points = values
    .map((value, index) => {
      const x = (index / (values.length - 1)) * 100;
      const y = values.length === 1 ? 50 : ((value - min) / (max - min || 1)) * 100;
      return `${x},${100 - y}`;
    })
    .join(" ");

  return (
    <svg className="h-20 w-full" viewBox="0 0 100 100" preserveAspectRatio="none">
      <defs>
        <linearGradient id={`${gradientId}-${trend}`} x1="0%" x2="0%" y1="0%" y2="100%">
          <stop offset="0%" stopColor="rgba(16,185,129,0.35)" />
          <stop offset="100%" stopColor="rgba(16,185,129,0)" />
        </linearGradient>
      </defs>
      <polyline
        fill="none"
        strokeWidth="2"
        stroke={trend === "down" ? "#f87171" : trend === "up" ? "#34d399" : "#38bdf8"}
        points={points}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <polygon points={`${points} 100,100 0,100`} fill={`url(#${gradientId}-${trend})`} opacity={0.3} />
    </svg>
  );
};

const MiniBars: React.FC<{ bars: ComponentBar[] }> = ({ bars }) => {
  if (!bars.length) return null;
  const max = Math.max(...bars.map((bar) => (bar.baseline ?? bar.value) || 1));

  return (
    <div className="mt-2 space-y-2">
      {bars.map((bar) => {
        const baseline = bar.baseline ?? max;
        const width = Math.max(2, Math.min(100, (bar.value / (baseline || 1)) * 100));
        return (
          <div key={bar.label} className="space-y-1">
            <div className="flex items-center justify-between text-xs text-slate-400">
              <span>{bar.label}</span>
              <span>{bar.display ?? `${bar.value}${bar.baseline ? "%" : ""}`}</span>
            </div>
            <div className="h-2 w-full overflow-hidden rounded-full bg-slate-800">
              <div
                className="h-full rounded-full bg-gradient-to-r from-emerald-400 via-sky-400 to-indigo-400"
                style={{ width: `${width}%` }}
              />
            </div>
          </div>
        );
      })}
    </div>
  );
};

const ComponentCard: React.FC<{ component: DashboardComponent }> = ({ component }) => (
  <article className="flex h-full flex-col gap-3 rounded-2xl border border-slate-800/60 bg-slate-900/70 p-5 shadow-[0_10px_30px_-12px_rgba(15,23,42,0.8)] backdrop-blur">
    <div className="flex items-start justify-between gap-3">
      <div>
        <h3 className="text-xs font-semibold uppercase tracking-[0.2em] text-slate-400">
          {component.title}
        </h3>
        {component.description && (
          <p className="mt-2 text-sm text-slate-300/80">{component.description}</p>
        )}
      </div>
      {component.badges && (
        <div className="flex flex-wrap gap-2">
          {component.badges.map((badge) => (
            <span
              key={badge}
              className="rounded-full border border-slate-700/60 bg-slate-800/60 px-3 py-1 text-[10px] font-semibold uppercase tracking-wide text-slate-300"
            >
              {badge}
            </span>
          ))}
        </div>
      )}
    </div>

    {(component.metric || component.change) && (
      <div className="flex flex-wrap items-baseline gap-2 text-lg font-semibold text-slate-100">
        {component.metric && <span>{component.metric}</span>}
        {component.change && (
          <span className={`text-sm font-medium ${component.trend ? trendClasses[component.trend] : "text-slate-400"}`}>
            {component.change}
          </span>
        )}
      </div>
    )}

    {component.sparkline && <Sparkline values={component.sparkline} trend={component.trend} />}
    {component.bars && <MiniBars bars={component.bars} />}

    {component.rows && (
      <div className="space-y-2">
        {component.rows.map((row) => (
          <div key={row.label} className="flex items-center justify-between text-sm">
            <span className="text-slate-300/90">{row.label}</span>
            <span className={`font-medium ${rowIntentClass(row.intent)}`}>
              {row.value}
            </span>
          </div>
        ))}
      </div>
    )}

    {component.timeline && (
      <div className="space-y-2 text-sm">
        {component.timeline.map((event) => (
          <div key={`${event.time}-${event.label}`} className="flex items-center gap-3">
            <span className="text-[11px] font-mono uppercase tracking-wider text-slate-500">{event.time}</span>
            <span
              className={`inline-flex items-center rounded-full px-2 py-1 text-[11px] font-semibold uppercase ${event.severity ? severityClasses[event.severity] : "bg-slate-800 text-slate-300"}`}
            >
              {event.label}
            </span>
          </div>
        ))}
      </div>
    )}

    {component.insights && (
      <ul className="space-y-1 text-sm text-slate-300/90">
        {component.insights.map((item) => (
          <li key={item} className="flex items-center gap-2">
            <span className="h-1.5 w-1.5 rounded-full bg-emerald-400" />
            {item}
          </li>
        ))}
      </ul>
    )}
  </article>
);

const DashboardSection: React.FC<{ section: DashboardSection }> = ({ section }) => (
  <section className="space-y-5 rounded-3xl border border-slate-800/60 bg-slate-950/60 p-6 shadow-[0_20px_45px_-25px_rgba(15,23,42,1)]">
    <header className="flex flex-col gap-2 md:flex-row md:items-end md:justify-between">
      <div>
        <h2 className="text-xl font-semibold text-slate-100">{section.title}</h2>
        <p className="max-w-3xl text-sm text-slate-400">{section.description}</p>
      </div>
    </header>
    <div className="grid gap-4 md:grid-cols-2 xl:grid-cols-3">
      {section.components.map((component) => (
        <ComponentCard key={component.id} component={component} />
      ))}
    </div>
  </section>
);

const Dashboard: React.FC = () => {
  return (
    <div className="mx-auto flex w-full max-w-[1440px] flex-col gap-8 p-6 text-slate-100">
      <header className="rounded-3xl border border-emerald-500/20 bg-gradient-to-r from-emerald-500/10 via-slate-900 to-sky-500/10 p-8 shadow-[0_25px_60px_-20px_rgba(16,185,129,0.5)]">
        <div className="flex flex-wrap items-end justify-between gap-4">
          <div>
            <p className="text-xs font-semibold uppercase tracking-[0.4em] text-emerald-300/70">Phoenix ML Trading Agent</p>
            <h1 className="mt-3 text-3xl font-bold text-white">Operational Command Dashboard</h1>
            <p className="mt-2 max-w-2xl text-sm text-emerald-100/70">
              Centralise live trading intelligence, research diagnostics, and agent collaboration tools
              for the Phoenix execution stack. Each section mirrors the requested specification so
              teams can monitor and act in one unified surface.
            </p>
          </div>
          <div className="flex flex-col items-end gap-2 text-right text-sm text-emerald-100/80">
            <span>Last sync ‚Ä¢ 5 minutes ago</span>
            <span>Owner ‚Ä¢ Phoenix Ops Guild</span>
            <span className="inline-flex items-center gap-2 rounded-full border border-emerald-500/40 bg-emerald-500/10 px-3 py-1 text-xs font-semibold uppercase tracking-wide">
              Status: Green
            </span>
          </div>
        </div>
      </header>

      {dashboardSections.map((section) => (
        <DashboardSection key={section.id} section={section} />
      ))}
    </div>
  );
};

export default Dashboard;
