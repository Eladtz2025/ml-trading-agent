const dashboardSections = [
  {
    id: 'overview',
    title: 'üìà Overview',
    description: 'Holistic picture of the Phoenix portfolio with the most recent risk and return signals.',
    components: [
      {
        id: 'equity_curve',
        title: 'Equity Curve',
        metric: '$12.8M',
        change: '+3.6% MTD',
        trend: 'up',
        description: 'Trailing 90 day strategy NAV. New local high set 2 days ago.',
        sparkline: [82, 78, 85, 88, 91, 97, 104, 109, 107, 113, 118],
        insights: ['Volatility cluster easing', 'Confidence band tightened to 4.2%']
      },
      {
        id: 'daily_pnl',
        title: 'Daily P&L',
        metric: '+$182k',
        change: '+0.9% vs. 30d avg',
        trend: 'up',
        description: 'Net of transaction costs across all sleeves.',
        bars: [
          { label: 'Mon', value: 120, display: '$120k' },
          { label: 'Tue', value: 76, display: '$76k' },
          { label: 'Wed', value: 240, display: '$240k' },
          { label: 'Thu', value: 182, display: '$182k' },
          { label: 'Fri', value: 95, display: '$95k' }
        ],
        insights: ['Hit ratio 60%', 'Max single-day loss -$55k']
      },
      {
        id: 'sharpe_metrics',
        title: 'Sharpe Metrics',
        metric: '1.94',
        change: '+0.08 w/w',
        trend: 'up',
        description: 'Realized Sharpe statistics across multiple horizons.',
        rows: [
          { label: '30 day', value: '1.94', intent: 'up' },
          { label: '90 day', value: '1.72', intent: 'up' },
          { label: 'Live run', value: '1.63', intent: 'flat' }
        ],
        badges: ['target ‚â• 1.5']
      },
      {
        id: 'exposure_map',
        title: 'Exposure Map',
        metric: 'Gross 143%',
        change: 'Net +18%',
        trend: 'flat',
        description: 'Top sleeves and their directional footprint.',
        rows: [
          { label: 'US Equities', value: '+42%', intent: 'up' },
          { label: 'Rates', value: '-24%', intent: 'down' },
          { label: 'Commodities', value: '+9%', intent: 'up' },
          { label: 'Crypto', value: '+3%', intent: 'flat' }
        ],
        insights: ['Leverage buffer 0.7x', 'FX overlay hedged']
      },
      {
        id: 'alerts_summary',
        title: 'Alerts Summary',
        description: 'Latest supervision alerts generated by the monitoring stack.',
        timeline: [
          { time: '09:42', label: 'Latency spike resolved', severity: 'info' },
          { time: '08:17', label: 'Risk limit breach auto-trimmed', severity: 'warning' },
          { time: '06:03', label: 'Challenger drift outside band', severity: 'critical' }
        ],
        insights: ['0 open Sev-1 tickets', 'Ops SLA green']
      }
    ]
  },
  {
    id: 'model_analysis',
    title: 'üß† Model Insights',
    description: 'Understand model quality, drivers, and stability of the Phoenix stack across live windows.',
    components: [
      {
        id: 'hit_rate',
        title: 'Hit Rate',
        metric: '62%',
        change: '+4.1% vs prev week',
        trend: 'up',
        sparkline: [58, 55, 59, 61, 64, 62],
        insights: ['Long bias sleeves outperform', 'Options alpha lagging']
      },
      {
        id: 'shap_top_features',
        title: 'SHAP ‚Äî Top Features',
        description: 'Relative contribution of top predictive signals.',
        bars: [
          { label: 'Volatility regime', value: 36, display: '36%' },
          { label: 'Liquidity spread', value: 24, display: '24%' },
          { label: 'Funding curve', value: 18, display: '18%' },
          { label: 'Macro surprise', value: 12, display: '12%' },
          { label: 'Social sentiment', value: 10, display: '10%' }
        ],
        badges: ['Coverage 94%']
      },
      {
        id: 'feature_drift_chart',
        title: 'Feature Drift',
        metric: '1.12 PSI',
        change: '-0.05 d/d',
        trend: 'down',
        sparkline: [1.35, 1.33, 1.28, 1.24, 1.19, 1.12],
        insights: ['Stabilised after retrain', 'Keep monitoring ESG feed']
      },
      {
        id: 'target_distribution',
        title: 'Target Distribution',
        description: 'Balance of long/short labels during latest training window.',
        rows: [
          { label: 'Long', value: '48%', intent: 'up' },
          { label: 'Short', value: '45%', intent: 'down' },
          { label: 'Neutral', value: '7%', intent: 'flat' }
        ],
        badges: ['Drift < 5%']
      },
      {
        id: 'challenger_vs_champion',
        title: 'Challenger vs Champion',
        metric: '+42 bps',
        change: 'Challenger lead',
        trend: 'up',
        description: 'Net alpha differential over past 21 live days.',
        rows: [
          { label: 'Champion', value: 'Sharpe 1.63', intent: 'info' },
          { label: 'Challenger A', value: 'Sharpe 1.71', intent: 'up' },
          { label: 'Challenger B', value: 'Sharpe 1.49', intent: 'down' }
        ]
      }
    ]
  },
  {
    id: 'backtest_review',
    title: 'üß™ Backtest / Live Run Analysis',
    description: 'Drill into realised trades and backtest fidelity to validate the research to production loop.',
    components: [
      {
        id: 'trade_list_table',
        title: 'Latest Trades',
        description: 'Sample of executed orders with attribution.',
        rows: [
          { label: 'NVDA', value: '+$42k ‚Äî mean reversion', intent: 'up' },
          { label: 'ZB futures', value: '-$18k ‚Äî macro hedge', intent: 'down' },
          { label: 'ETH perp', value: '+$9k ‚Äî momentum', intent: 'up' }
        ],
        badges: ['slippage 3.2 bps']
      },
      {
        id: 'price_chart_with_signals',
        title: 'Price with Signals',
        metric: 'Signal Conviction 0.78',
        sparkline: [94, 97, 101, 99, 104, 108, 111, 109],
        insights: ['7/10 trades aligned', 'No stop-outs triggered']
      },
      {
        id: 'holding_period_dist',
        title: 'Holding Period Distribution',
        description: 'Average duration of live positions vs design target.',
        bars: [
          { label: '< 1d', value: 12, display: '12%' },
          { label: '1-3d', value: 38, display: '38%' },
          { label: '3-5d', value: 29, display: '29%' },
          { label: '> 5d', value: 21, display: '21%' }
        ],
        badges: ['Target 2.5d']
      },
      {
        id: 'performance_metrics_table',
        title: 'Performance Metrics',
        rows: [
          { label: 'IR', value: '2.03', intent: 'up' },
          { label: 'Max DD', value: '-6.4%', intent: 'down' },
          { label: 'Calmar', value: '3.4', intent: 'up' }
        ],
        insights: ['Backtest-live divergence 1.3%']
      },
      {
        id: 'monte_carlo_scenarios',
        title: 'Monte Carlo Stress',
        metric: '95% CVaR -8.9%',
        change: '-0.7% tighter',
        trend: 'up',
        description: '1k path stress with volatility regime sampling.',
        insights: ['Left tail trimmed', 'Capital buffer adequate']
      }
    ]
  },
  {
    id: 'risk_monitor',
    title: '‚ö†Ô∏è Risk Monitor',
    description: 'Continuous supervision of leverage, drawdown, and asset specific exposure health.',
    components: [
      {
        id: 'live_drawdown',
        title: 'Live Drawdown',
        metric: '-4.2%',
        change: 'Peak -6.4%',
        trend: 'up',
        sparkline: [-6.4, -5.9, -5.3, -4.8, -4.2],
        insights: ['Recovery 2.2% since Monday']
      },
      {
        id: 'leverage_gauge',
        title: 'Leverage',
        metric: '1.3x',
        change: 'Cap 2.0x',
        trend: 'flat',
        description: 'Effective gross leverage after hedges.',
        bars: [
          { label: 'Used', value: 65, baseline: 100, display: '65%' },
          { label: 'Buffer', value: 35, baseline: 100, display: '35%' }
        ],
        badges: ['Alert @ 1.7x']
      },
      {
        id: 'exposure_by_asset',
        title: 'Exposure by Asset',
        rows: [
          { label: 'Tech MegaCap', value: '+19%', intent: 'up' },
          { label: 'Rates', value: '-12%', intent: 'down' },
          { label: 'Energy', value: '+7%', intent: 'up' },
          { label: 'EM FX', value: '-3%', intent: 'flat' }
        ],
        insights: ['Sector limit 25%', 'Commodity VaR stable']
      },
      {
        id: 'risk_alerts_log',
        title: 'Risk Alerts Log',
        timeline: [
          { time: '10:21', label: 'Equity beta drift resolved', severity: 'info' },
          { time: '09:05', label: 'Rates DV01 at 82% limit', severity: 'warning' },
          { time: '07:48', label: 'Commod sleeve stop raised', severity: 'info' }
        ],
        badges: ['Auto-mitigated']
      },
      {
        id: 'stop_trigger_events',
        title: 'Stop Trigger Events',
        description: 'Hard stop activations over the last quarter.',
        rows: [
          { label: 'January', value: '1', intent: 'down' },
          { label: 'February', value: '0', intent: 'flat' },
          { label: 'March', value: '1', intent: 'info' }
        ],
        insights: ['No cascading stops']
      }
    ]
  },
  {
    id: 'data_validation',
    title: 'üìä Data & Label QA',
    description: 'Verify upstream data quality, anomalies, and label integrity that feed Phoenix research.',
    components: [
      {
        id: 'anomaly_timeline',
        title: 'Anomaly Timeline',
        timeline: [
          { time: 'Fri', label: 'FX liquidity drop', severity: 'warning' },
          { time: 'Thu', label: 'Missing macro release', severity: 'critical' },
          { time: 'Tue', label: 'Equity feed jitter', severity: 'info' }
        ],
        insights: ['All patched', 'Escalation SLA 45m']
      },
      {
        id: 'missing_data_table',
        title: 'Missing Data',
        rows: [
          { label: 'Economic releases', value: '0.6%', intent: 'down' },
          { label: 'Order book', value: '0.2%', intent: 'flat' },
          { label: 'Alt data', value: '1.1%', intent: 'down' }
        ],
        badges: ['Threshold 2%']
      },
      {
        id: 'triple_barrier_distribution',
        title: 'Triple Barrier Outcomes',
        description: 'Outcome counts for recent labeling job.',
        rows: [
          { label: 'Take profit', value: '57%', intent: 'up' },
          { label: 'Stop loss', value: '28%', intent: 'down' },
          { label: 'Timeout', value: '15%', intent: 'flat' }
        ]
      },
      {
        id: 'feature_coverage_map',
        title: 'Feature Coverage',
        bars: [
          { label: 'Market data', value: 96, display: '96%' },
          { label: 'Alt data', value: 88, display: '88%' },
          { label: 'Research', value: 91, display: '91%' }
        ],
        insights: ['Coverage uplift +3% w/w']
      }
    ]
  },
  {
    id: 'config_ops',
    title: '‚öôÔ∏è Config & Ops',
    description: 'Operational levers for adjusting configurations, reviewing logs, and managing artifacts.',
    components: [
      {
        id: 'current_config_viewer',
        title: 'Current Config',
        metric: 'phoenix-live-24.3',
        description: 'Deployment hash 7f9c1a, refreshed 6 hours ago.',
        insights: ['Overrides: none', 'Schedule: hourly']
      },
      {
        id: 'config_selector_launcher',
        title: 'Config Selector',
        description: 'Preview alternative research configs before promotion.',
        timeline: [
          { time: 'Next', label: 'phoenix-research-24.4', severity: 'info' },
          { time: 'Queued', label: 'mean-reversion-lab', severity: 'info' }
        ],
        badges: ['A/B ready']
      },
      {
        id: 'artifacts_browser',
        title: 'Artifacts Browser',
        insights: [
          'Last run: backtest_2024-03-08',
          'Artifacts: feature-importances.csv, metrics.json',
          'Retention: 30 days'
        ]
      },
      {
        id: 'logs_panel',
        title: 'Logs',
        timeline: [
          { time: '10:14', label: 'Pipeline heartbeat ok', severity: 'info' },
          { time: '09:55', label: 'Scheduler resync', severity: 'warning' },
          { time: '09:20', label: 'GPU pod spun up', severity: 'info' }
        ]
      },
      {
        id: 'run_status_indicator',
        title: 'Run Status',
        metric: 'Live',
        change: 'Next check 12:00',
        trend: 'up',
        rows: [
          { label: 'Backtest', value: 'Queued', intent: 'info' },
          { label: 'Paper', value: 'Running', intent: 'up' },
          { label: 'Prod', value: 'Green', intent: 'up' }
        ],
        badges: ['SLO 99.9%']
      }
    ]
  },
  {
    id: 'agent_interface',
    title: 'ü§ñ Phoenix Agent',
    description: 'Interact with the Phoenix research co-pilot, review its learning traces, and monitor drift.',
    components: [
      {
        id: 'prompt_input_box',
        title: 'Prompt Inbox',
        description: 'Latest operator prompts awaiting acknowledgement.',
        timeline: [
          { time: 'Now', label: 'Tune leverage heuristics', severity: 'info' },
          { time: '08:12', label: 'Summarise overnight delta', severity: 'info' }
        ]
      },
      {
        id: 'response_output_box',
        title: 'Agent Responses',
        insights: [
          'Suggested volatility dampening tweak (accepted)',
          'Flagged alt data drift, opened ticket'
        ]
      },
      {
        id: 'learning_log_viewer',
        title: 'Learning Log',
        timeline: [
          { time: '09:40', label: 'Reward +0.18 ‚Äî risk alignment', severity: 'info' },
          { time: '09:02', label: 'Reward -0.05 ‚Äî execution delay', severity: 'warning' }
        ]
      },
      {
        id: 'drift_graphs',
        title: 'Prompt Drift',
        metric: 'KL 0.17',
        change: '-0.03 d/d',
        trend: 'down',
        sparkline: [0.26, 0.23, 0.21, 0.19, 0.17],
        insights: ['Improved alignment post fine-tune']
      },
      {
        id: 'shap_dynamics_chart',
        title: 'SHAP Dynamics',
        description: 'How the agent re-weights explanations across runs.',
        bars: [
          { label: 'Execution risk', value: 32, display: '32%' },
          { label: 'Market regime', value: 28, display: '28%' },
          { label: 'Capital efficiency', value: 22, display: '22%' },
          { label: 'Behavioural', value: 18, display: '18%' }
        ]
      },
      {
        id: 'agent_timeline',
        title: 'Agent Timeline',
        timeline: [
          { time: 'Today', label: 'Calibrated reward weights', severity: 'info' },
          { time: 'Yesterday', label: 'Drafted research summary', severity: 'info' },
          { time: 'Mon', label: 'Escalated drift anomaly', severity: 'warning' }
        ],
        insights: ['Learning velocity: 5 updates / day']
      }
    ]
  }
];

const trendClass = (trend) => {
  if (trend === 'up') return 'up';
  if (trend === 'down') return 'down';
  if (trend === 'flat') return 'flat';
  return '';
};

const createSparkline = (values = []) => {
  if (!values.length) return null;
  const min = Math.min(...values);
  const max = Math.max(...values);
  const sparkline = document.createElement('div');
  sparkline.className = 'sparkline';

  values.forEach((value) => {
    const bar = document.createElement('span');
    const height = max === min ? 50 : ((value - min) / (max - min)) * 70 + 30;
    bar.style.height = `${height}%`;
    sparkline.appendChild(bar);
  });

  return sparkline;
};

const createBars = (bars = []) => {
  if (!bars.length) return null;
  const container = document.createElement('div');
  container.className = 'bar-list';

  const max = Math.max(...bars.map((item) => (item.baseline ?? item.value)));

  bars.forEach((bar) => {
    const item = document.createElement('div');
    item.className = 'bar';

    const label = document.createElement('div');
    label.className = 'bar-label';
    label.innerHTML = `<span>${bar.label}</span><span>${bar.display ?? `${bar.value}${bar.baseline ? '%' : ''}`}</span>`;

    const track = document.createElement('div');
    track.className = 'bar-track';
    const fill = document.createElement('div');
    fill.className = 'bar-fill';
    const ratio = (bar.value / (bar.baseline ?? max)) * 100;
    fill.style.width = `${Math.max(4, Math.min(100, ratio))}%`;

    track.appendChild(fill);
    item.appendChild(label);
    item.appendChild(track);
    container.appendChild(item);
  });

  return container;
};

const createRows = (rows = []) => {
  if (!rows.length) return null;
  const wrapper = document.createElement('div');
  wrapper.className = 'rows';

  rows.forEach((row) => {
    const rowEl = document.createElement('div');
    rowEl.className = 'row';

    const label = document.createElement('span');
    label.textContent = row.label;

    const value = document.createElement('span');
    value.className = `value ${row.intent ?? ''}`.trim();
    value.textContent = row.value;

    rowEl.append(label, value);
    wrapper.appendChild(rowEl);
  });

  return wrapper;
};

const createTimeline = (items = []) => {
  if (!items.length) return null;
  const container = document.createElement('div');
  container.className = 'timeline';

  items.forEach((item) => {
    const row = document.createElement('div');
    row.className = 'timeline-item';

    const time = document.createElement('span');
    time.className = 'timeline-time';
    time.textContent = item.time;

    const pill = document.createElement('span');
    pill.className = `timeline-pill ${item.severity ?? 'info'}`;
    pill.textContent = item.label;

    row.append(time, pill);
    container.appendChild(row);
  });

  return container;
};

const createInsights = (items = []) => {
  if (!items.length) return null;
  const list = document.createElement('ul');
  list.className = 'insights';

  items.forEach((text) => {
    const li = document.createElement('li');
    li.textContent = text;
    list.appendChild(li);
  });

  return list;
};

const createBadges = (badges = []) => {
  if (!badges.length) return null;
  const wrapper = document.createElement('div');
  wrapper.className = 'badges';

  badges.forEach((badge) => {
    const span = document.createElement('span');
    span.className = 'badge';
    span.textContent = badge;
    wrapper.appendChild(span);
  });

  return wrapper;
};

const createComponentCard = (component) => {
  const card = document.createElement('article');
  card.className = 'card';

  const title = document.createElement('h3');
  title.textContent = component.title;
  card.appendChild(title);

  if (component.description) {
    const summary = document.createElement('p');
    summary.className = 'summary';
    summary.textContent = component.description;
    card.appendChild(summary);
  }

  const badges = createBadges(component.badges);
  if (badges) card.appendChild(badges);

  if (component.metric || component.change) {
    const metricRow = document.createElement('div');
    metricRow.className = 'metric-row';

    if (component.metric) {
      const metric = document.createElement('span');
      metric.textContent = component.metric;
      metricRow.appendChild(metric);
    }

    if (component.change) {
      const change = document.createElement('span');
      change.className = `metric-change ${trendClass(component.trend)}`.trim();
      change.textContent = component.change;
      metricRow.appendChild(change);
    }

    card.appendChild(metricRow);
  }

  const sparkline = createSparkline(component.sparkline);
  if (sparkline) card.appendChild(sparkline);

  const bars = createBars(component.bars);
  if (bars) card.appendChild(bars);

  const rows = createRows(component.rows);
  if (rows) card.appendChild(rows);

  const timeline = createTimeline(component.timeline);
  if (timeline) card.appendChild(timeline);

  const insights = createInsights(component.insights);
  if (insights) card.appendChild(insights);

  return card;
};

const createSection = (section) => {
  const sectionEl = document.createElement('section');
  sectionEl.className = 'dashboard-section';
  sectionEl.id = section.id;

  const header = document.createElement('header');
  const title = document.createElement('h2');
  title.textContent = section.title;
  const description = document.createElement('p');
  description.className = 'description';
  description.textContent = section.description;

  header.append(title, description);
  sectionEl.appendChild(header);

  const grid = document.createElement('div');
  grid.className = 'cards-grid';

  section.components.forEach((component) => {
    grid.appendChild(createComponentCard(component));
  });

  sectionEl.appendChild(grid);
  return sectionEl;
};

const renderDashboard = () => {
  const root = document.getElementById('dashboard-root');
  if (!root) return;

  const main = document.createElement('main');

  const hero = document.createElement('section');
  hero.className = 'hero';

  const heroIntro = document.createElement('div');
  const kicker = document.createElement('p');
  kicker.className = 'summary';
  kicker.style.textTransform = 'uppercase';
  kicker.style.letterSpacing = '0.4em';
  kicker.style.fontSize = '0.7rem';
  kicker.style.color = 'rgba(110, 231, 183, 0.7)';
  kicker.textContent = 'Phoenix ML Trading Agent';

  const heading = document.createElement('h1');
  heading.textContent = 'Operational Command Dashboard';

  const lead = document.createElement('p');
  lead.className = 'lead';
  lead.textContent =
    'Centralise live trading intelligence, research diagnostics, and agent collaboration tools for the Phoenix execution stack. Each section mirrors the requested specification so teams can monitor and act in one unified surface.';

  heroIntro.append(kicker, heading, lead);

  const heroStatus = document.createElement('div');
  heroStatus.className = 'status';
  heroStatus.innerHTML = `
    <span>Last sync ‚Ä¢ 5 minutes ago</span>
    <span>Owner ‚Ä¢ Phoenix Ops Guild</span>
  `;
  const pill = document.createElement('span');
  pill.className = 'pill';
  pill.textContent = 'Status: Green';
  heroStatus.appendChild(pill);

  hero.append(heroIntro, heroStatus);
  main.appendChild(hero);

  dashboardSections.forEach((section) => {
    main.appendChild(createSection(section));
  });

  root.appendChild(main);
};

renderDashboard();
