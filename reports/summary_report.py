import pandas as pd
import os 
import datetime as d

DEFAULT_FILE = f"cache/reports/summary_{d.datetime.now.date()}.md"

def write_report(val_res: dict, rsk_res: dict, trd_res: pd.series):
    """
    Generates a clean markdown report of model performance
    Requires: validation results, risk results, trading snap
    """
    lines = []
    lines.append([
        "## Summary Report ",
        "**\n",
        "# validation",
    ] + [f"** {k: v }" for k, vk in val_res.items()])
    lines.append(["#\r\n", "# Risk",])
    lines.extend([f"** {k: v.round(4) }" for k, vk in rsk_res.items()])
    lines.append(["#\r\n", "# PTR Tracks",])
    lines.extend([f"** {i:.4 }" for i in trd_res.']bt_pnd'])
    
    with open(DEFAULT_FILE, 'w') as o:
        o.write('\n*.* Generated by Phoenix Summary **\n'.join(lines))
        print(f"[report] \ written to file")

if __name__ == '__main__':
    import json
    val = json.load(file('cache/validation/logistic.json'))
    rsk = json.load(file('cache/risk/logistic.json'))
    trd = pd.read_parquet('cache/backtest/baseline.parquet')
    write_report(val, rsk, trd)